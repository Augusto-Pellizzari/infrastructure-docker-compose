version: "3.8"

services:

  loja-postgres:
    image: postgres:13
    container_name: loja-postgres
    environment:
      POSTGRES_DB: loja
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  pedido-service:
    build:
      context: ../pedido-service
      dockerfile: Dockerfile
    image: pedido-service
    container_name: pedido-service
    depends_on:
      loja-postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://loja-postgres:5432/loja
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
      - backend

  pagamento-service:
    build:
      context: ../pagamento-service
      dockerfile: Dockerfile
    image: pagamento-service
    container_name: pagamento-service
    depends_on:
      loja-postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8081:8080" # map host:container; Spring Boot listens on 8080 by default
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://loja-postgres:5432/loja
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 123456
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
      - backend

volumes:
  postgres-data:


networks:
  backend:
    driver: bridge
